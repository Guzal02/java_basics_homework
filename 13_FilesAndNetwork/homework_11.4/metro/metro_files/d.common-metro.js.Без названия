MetroTransformHandler = {toggleFullScreen : function (onoff) {var d = window.document;if (onoff) {var e = d.documentElement;var requestFullScreen=e.requestFullscreen || e['mozRequestFullScreen']|| e['webkitRequestFullScreen'];requestFullScreen.call(e)} else {var cancelFullScreen=d.exitFullscreen || d['mozCancelFullScreen']|| d['webkitExitFullscreen'];cancelFullScreen.call(d)}},checkFullScreenOff : function(){var d = window.document;return !d.fullscreenElement && !d['mozFullScreenElement']&& !d['webkitFullscreenElement'];},init : function(mode) {this.mode=mode || 'desktop';this.elems = {svg_block : $('#mosmetro'),layer4scaling : $('#scaling-wrapper'),layer4moving : $('#moving-wrapper'),svg_wrapper : $('.b-vd-metro')};if(this.mode==='desktop'){this.elems.aside_by_height = [$('.b-vd-header'),$('.b-vd-mainsearch')];this.elems.aside_by_width = [$('.b-vd-metro-leftcolumn'),$('.b-vd-metro-rightcolumn')];} else {this.elems.aside_by_height = [$('.b-header'),$('.b-metro-m-form-wrapper'),$('.b-bottom-adbox'),$('.b-metro-control-panel'),$('.b-metro-calc-results-info')];this.elems.aside_by_width = [];};if(this.mode==='desktop'){this.elems.svg_wrapper.append('<div class="b-metro-transform-buttons">' +'<div data-action="zoomIn">+</div>' +'<div data-action="zoomOut">–</div>' +'<div data-action="maxOut">ʘ</div>' +'</div>');this.elems.buttons=$('.b-metro-transform-buttons > *')};this.calcSizes();this.resetTransform('begin');this.addEvents()},sizes : {desktop_layout_width : 1340,svg_viewbox_width_orig : 1624,svg_viewbox_height_orig: 2140,svg_viewbox_height_orig_mobile: 2140,viewport_width : null,viewport_height : null,svg_wrapper_left : null,svg_wrapper_top : null,svg_wrapper_width : null,svg_wrapper_height : null,svg_viewbox_width : null,svg_viewbox_height: null,svg_scale : null},scaling : {zoom_step : 0.2,left : 0,top : 0 ,zoom : 1 ,minzoom : 0.6,maxzoom : 3},moving : {left : 0,top : 0},last_mousedown_coord :[],last_mousedown_timestamp : 0,last_touch_mode : null,last_touch_dist : 0,last_touch_coord:[],last_touchstart_coord:[0,0],last_touch_timestamp : 0,dist4events : function(a,b){return Math.sqrt(Math.pow(( a.pageX - b.pageX ), 2) + Math.pow(( a.pageY - b.pageY ), 2))},mobile_address_bar_flag : true,calcSizes : function() {this.last_mousedown_coord = [];this.last_touch_coord = [];this.sizes.viewport_width = $(window).innerWidth();if(this.mode==='desktop')this.sizes.viewport_width=Math.max(this.sizes.viewport_width, this.sizes.desktop_layout_width);if(this.mode==='mobile')this.sizes.svg_viewbox_height_orig=this.sizes.svg_viewbox_height_orig_mobile;this.sizes.viewport_height = $(window).innerHeight();this.sizes.viewport_outer_height = $(window).outerHeight();this.mobile_address_bar_flag = (this.sizes.viewport_outer_height === this.sizes.viewport_height);this.sizes.svg_wrapper_width = this.sizes.viewport_width;for (var i in this.elems.aside_by_width) {this.sizes.svg_wrapper_width -= this.elems.aside_by_width[i].visibleWidth()};this.sizes.svg_wrapper_height = this.sizes.viewport_height;if(this.mode==='mobile'){this.sizes.svg_wrapper_height = Math.max(this.sizes.svg_wrapper_height,this.sizes.viewport_outer_height)};for (var i in this.elems.aside_by_height) {this.sizes.svg_wrapper_height -= this.elems.aside_by_height[i].visibleHeight()};var xy = this.elems.svg_wrapper[0].getBoundingClientRect();this.sizes.svg_wrapper_left=xy['left']+window.pageXOffset;this.sizes.svg_wrapper_top=xy['top']+window.pageYOffset;this.sizes.svg_viewbox_width = this.sizes.svg_viewbox_width_orig;this.sizes.svg_scale = this.sizes.svg_wrapper_width / this.sizes.svg_viewbox_width;this.sizes.svg_viewbox_height = this.sizes.svg_wrapper_height / this.sizes.svg_scale;this.elems.svg_block.attr({'viewBox' : '0 0 '+this.sizes.svg_viewbox_width+' '+this.sizes.svg_viewbox_height,'width' : this.sizes.svg_wrapper_width,'height': this.sizes.svg_wrapper_height});this.scaling.minzoom = this.sizes.svg_viewbox_height / this.sizes.svg_viewbox_height_orig;if(this.mode==='mobile'){this.scaling.minzoom = Math.min(this.scaling.minzoom,this.sizes.svg_viewbox_width / this.sizes.svg_viewbox_width_orig)};this.scaling.maxzoom = 1/this.sizes.svg_scale + 1;if(this.mode==='mobile')this.scaling.maxzoom+=1;this.scaling.zoom_step = (this.scaling.maxzoom - this.scaling.minzoom ) /5;this.movingForOffset();this.scalingForOffset(this.scaling.zoom);$(window).trigger('ResizeMetroScheme')},addEvents : function(){var that = this;var resize_events='resize';if(this.mode==='desktop'){resize_events+=' '+MainSearchDisplayHandler.names.trigger_show;resize_events+=' '+MainSearchDisplayHandler.names.trigger_hide;} else {resize_events+=' orientationchange';}$(window).on(resize_events,function(){that.calcSizes()});var getTouches = function(event){return event.originalEvent.touches || [event];};var checkEvent4AddressBar = function(event){if (!that.mobile_address_bar_flag) {event.preventDefault();event.stopPropagation()}};this.elems.svg_block.on('touchstart',function(event){checkEvent4AddressBar(event);var touches = getTouches(event);if (touches.length > 1) {event.preventDefault();that.last_touch_mode='scaling';that.last_touch_dist = that.dist4events(touches[0], touches[1])} else {that.last_touch_mode = null;that.last_touch_timestamp = event.originalEvent.timeStamp;that.last_touch_coord = that.last_touchstart_coord = [touches[0].pageX,touches[0].pageY];}}).on('touchmove',function(event){checkEvent4AddressBar(event);var touches = getTouches(event);if(that.last_touch_mode==='scaling' && touches.length>1){event.preventDefault();var dist = that.dist4events(touches[0], touches[1]);var zoom = that.scaling.zoom_step*3* (dist / that.last_touch_dist-1) + that.scaling.zoom;that.last_touch_dist = dist;zoom = that.getAllowedZoom(zoom);if (zoom === that.scaling.zoom) return;var x = ( touches[0].pageX + touches[1].pageX ) / 2 - that.resultLeftOffset() - that.sizes.svg_wrapper_left;var y = ( touches[0].pageY + touches[1].pageY ) / 2 - that.resultTopOffset() - that.sizes.svg_wrapper_top;var offset = [x * ( 1 - zoom/that.scaling.zoom ),y * ( 1 - zoom/that.scaling.zoom )];that.scalingForOffset(zoom, offset)} else {var offset = [touches[0].pageX - that.last_touch_coord[0],touches[0].pageY - that.last_touch_coord[1]];if (offset[1]>0) event.preventDefault();if (offset[0] || offset[1]) {that.movingForOffset(offset,false);that.last_touch_mode='moving';} else {that.last_touch_mode = null;};that.last_touch_coord = [touches[0].pageX,touches[0].pageY];}}).on('touchend',function(event){event.preventDefault();event.stopPropagation();var touches = getTouches(event);if (touches.length > 1) {event.preventDefault()}else {var t = event.originalEvent.changedTouches && event.originalEvent.changedTouches[0] || event;var is_click = (Math.abs(that.last_touchstart_coord[0] - t.pageX)<10 &&Math.abs(that.last_touchstart_coord[1] - t.pageY)<10 &&event.timeStamp - that.last_touch_timestamp<500);if (is_click && that.scaling.zoom < that.scaling.minzoom + 1.9*that.scaling.zoom_step) {that.scalingForPagePoint(t.pageX,t.pageY,that.scaling.zoom_step )} else if (is_click) {$(event.target).click()}}});this.elems.svg_block.mousewheel(function(event, delta) {var zoom_delta = (delta > 0 ? 1 : -1) *that.scaling.zoom_step;that.scalingForPagePoint(event.pageX,event.pageY,zoom_delta );return false;});this.elems.svg_block.on('mousedown',function(event){that.last_mousedown_coord = [event.pageX, event.pageY];that.last_mousedown_timestamp = event.originalEvent.timeStamp;});$(window).on('mouseup.ClearMetroSchemeMousedownTracker',function(){that.last_mousedown_coord = [];});this.elems.svg_block[0].ondragstart = function() {return false};this.elems.svg_block.on('mouseup',function(event){if (event.originalEvent.button) event.preventDefault()});this.elems.svg_block.on('mousemove',function(event){if (!that.last_mousedown_coord.length) return;var offset = [event.pageX - that.last_mousedown_coord[0],event.pageY - that.last_mousedown_coord[1]];that.movingForOffset(offset,false);that.last_mousedown_coord = [event.pageX, event.pageY];});if(this.mode==='desktop'){this.elems.buttons.on('click',function(){var action=$(this).attr('data-action');switch (action) {case 'zoomIn': that.zoomInOut(1);break;case 'zoomOut': that.zoomInOut(-1);break;case 'maxOut': that.resetTransform('max-out');break;}})}},scalingForPagePoint : function(x, y, zoom_delta) {var xy = [x - this.resultLeftOffset() - this.sizes.svg_wrapper_left,y - this.resultTopOffset() - this.sizes.svg_wrapper_top];var zoom = this.getAllowedZoom(this.scaling.zoom + zoom_delta);if (zoom === this.scaling.zoom) return;var offset = [xy[0] * ( 1 - zoom/this.scaling.zoom ),xy[1] * ( 1 - zoom/this.scaling.zoom )];this.scalingForOffset(zoom, offset)},resetTransform : function (setup_name) {switch (setup_name) {case 'max-out' :var zoom = this.scaling.minzoom;break;case 'begin':default:var zoom = 1;};var scale = this.sizes.svg_scale;var h = this.sizes.svg_viewbox_height_orig*0.5;this.scaling.left = 0;this.scaling.top = - h *scale;this.moving.left = 0;this.moving.top = this.sizes.svg_wrapper_height *0.5 - h *scale *zoom - this.scaling.top;this.scalingForOffset(zoom);this.movingForOffset()},centerSchemeResult : function (points) {var scale = this.sizes.svg_scale;var margins=(this.mode==='desktop'?[40,40]:[15,50]);var zoom = Math.min((this.sizes.svg_wrapper_width - margins[0]/scale ) / ((points.cxMax - points.cxMin) *scale) ,(this.sizes.svg_wrapper_height - margins[1]/scale) / ((points.cyMax - points.cyMin) *scale)) ;zoom = Math.min(Math.max(zoom , this.scaling.minzoom ), this.scaling.maxzoom);this.scaling.left=-points.cxMin *scale;this.scaling.top = - points.cyMin *scale;this.moving.left = this.sizes.svg_wrapper_width *0.5 - points.cxMid *scale *zoom - this.scaling.left;this.moving.top = this.sizes.svg_wrapper_height *0.5 - points.cyMid *scale *zoom - this.scaling.top ;this.scalingForOffset(zoom);this.movingForOffset()},centerSchemePoint : function(xy) {var scale = this.sizes.svg_scale;var zoom = (this.scaling.maxzoom + this.scaling.minzoom) / 2 ;this.scaling.left = - xy[0] *scale;this.scaling.top = - xy[1] *scale;this.moving.left = this.sizes.svg_wrapper_width /2 - xy[0] *scale *zoom - this.scaling.left;this.moving.top = this.sizes.svg_wrapper_height/2 - xy[1] *scale *zoom - this.scaling.top;this.scalingForOffset(zoom);this.movingForOffset()},getAllowedOffset : function(zoom,offset) {var left = this.resultLeftOffset(),w = this.sizes.svg_wrapper_width,wk = w * zoom ,offset4center = Math.max(0,(w - wk) *0.5),a1 = Math.min(Math.max(offset[0], w - wk - left), - left + offset4center),top = this.resultTopOffset(),hv = this.sizes.svg_wrapper_height,hh = (this.sizes.svg_viewbox_height_orig)*this.sizes.svg_scale *zoom,b1 = Math.min(Math.max(offset[1], hv - hh - top ), - top);return [a1,b1];},getAllowedZoom : function(zoom){return Math.min(Math.max( zoom, this.scaling.minzoom ), this.scaling.maxzoom)},resultTopOffset : function() {return this.scaling.top + this.moving.top ;},resultLeftOffset : function() {return this.scaling.left + this.moving.left;},scalingForOffset : function (zoom, offset ) {offset = offset || [0,0];offset = this.getAllowedOffset(zoom,offset);this.scaling.left += offset[0];this.scaling.top += offset[1];this.scaling.zoom = zoom;this.elems.layer4scaling.attr('transform','translate('+(this.scaling.left / this.sizes.svg_scale)+','+ (this.scaling.top / this.sizes.svg_scale)+') scale('+zoom+')');$(window).trigger('TransformMetroScheme')},movingForOffset : function (offset, skip_check_flag) {offset = offset || [0,0];if (!skip_check_flag) offset = this.getAllowedOffset(this.scaling.zoom,offset);this.moving.left += offset[0];this.moving.top += offset[1];this.elems.layer4moving.attr('transform','translate('+(this.moving.left / this.sizes.svg_scale)+' '+(this.moving.top / this.sizes.svg_scale)+')');$(window).trigger('TransformMetroScheme')},zoomInOut : function (sign) {var x = this.sizes.svg_wrapper_width*0.5 + this.sizes.svg_wrapper_left;var y = this.sizes.svg_wrapper_height*0.5 + this.sizes.svg_wrapper_top;this.scalingForPagePoint(x,y, sign * this.scaling.zoom_step)},transformForPopup : function(data){var elem_offset = data.elem[0].getBoundingClientRect();var scalezoom = this.sizes.svg_scale * this.scaling.zoom;var triangle_width = 12;var triangle_height = 12;var padding = 10;var elem_shift_left = elem_offset.width * 0.5;var elem_shift_top = -elem_offset.height * 0.5;var elem_shift_left_by_moving=data.type==='station'?0 : elem_shift_left;var elem_shift_top_by_moving=data.type==='station'?0 : elem_shift_top;var popup_left = elem_offset.left - this.sizes.svg_wrapper_left - data.popup.width *0.5 + elem_shift_left;var popup_top = elem_offset.top - this.sizes.svg_wrapper_top - data.popup.height - triangle_height - elem_shift_top;var popup_left0 = popup_left, popup_top0 = popup_top;popup_left = Math.min(Math.max(padding, popup_left) , this.sizes.svg_wrapper_width - data.popup.width - padding);popup_top = Math.min(Math.max(padding, popup_top), this.sizes.svg_wrapper_height - data.popup.height - padding);if (popup_left!==popup_left0 || popup_top !== popup_top0 ) {var left = popup_left + data.popup.width*0.5 - (data.x + elem_shift_left_by_moving) *scalezoom;var top = popup_top + data.popup.height - (data.y - elem_shift_top_by_moving - triangle_height) *scalezoom;this.movingForOffset([left - this.resultLeftOffset() ,top - this.resultTopOffset()],true)};var tx = data.popup.width*0.5 - triangle_width;return ({left : popup_left,top: popup_top,triangle_left : {aft: tx + 1, bef: tx - 1 }})}};MetroSchemeHandler = {init : function(){this.svg=$('#mosmetro');this.addStationsAndTitleHoverEvent();this.addStationsAndTitlesClickEvent();this.addOtherIconsEvent()},checkLongClickTime : function(event) {var handler = MetroTransformHandler;if(handler.mode==='mobile')return false;return event.originalEvent.timeStamp - handler.last_mousedown_timestamp > 500;},addOtherIconsEvent : function(){var use4title='';var matchUseId = function(elem){return /^(rzd|air)(\d+)$/.exec(elem.attr('id'))};this.svg.find('g.icons use').each(function(){var t = $(this);var m = matchUseId(t);if (!m) return;var s = MetroDataHandler.icons_data[m[1]][parseInt(m[2]) - 1];use4title+='<g><title>'+s+'</title>'+ '<use x="' + t.attr('x') + '" y="' + t.attr('y') + '"'+ ' xlink:href="#' + m[1] + '" id="' + t.attr('id') + '"/>'+'</g>';});this.svg.find('g.icons').html(use4title);var that = this;this.svg.find('g.icons use').on('click',function(event){if (that.checkLongClickTime(event)) return;event.stopPropagation();var t = $(this);var m = matchUseId(t);if (!m) return;var data = {elem: t.closest('use').closest('g'),type: m[1],id: parseInt(m[2]),x: parseFloat(t.attr('x')),y : parseFloat(t.attr('y'))};MetroPopupHandler.addPopup(data)})},getStationDataByElem : function(elem){var tag = elem[0].nodeName;var m=(tag==='circle')?/^(p|s|x)(\d+)$/.exec(elem.attr('id')): /^(s)(\d+)/.exec(elem.attr('class'));if (!m) return;var station_id = parseInt(m[2]);var circle=(tag==='text')?this.svg.find('circle#s'+station_id): elem;return {elem : circle,id : station_id,type : 'station',x : parseFloat(circle.attr('cx')),y: parseFloat(circle.attr('cy'))};},getStationDataById : function(id){var circle=this.svg.find('circle#s'+id);return this.getStationDataByElem(circle)},addStationsAndTitlesClickEvent : function(){var that = this;this.svg.find('text').add(this.svg.find('g.stations circle')).on('click',function(event){event.stopPropagation();if (that.checkLongClickTime(event)) return;MetroController.selectStation({autofill : false,autocalc: false,elem: $(this),open_scheme : false,center_scheme : false,show_popup : true})})},getLinkedCirclesForTitle : function(attr_value){var m = attr_value.match(/(s\d+)/g);if (!m) return $([]);return this.svg.find('g.stations circle').not('.ghost').filter('#'+m.join(',#'))},getLinkedTitlesForCircle : function(attr_value){var m = attr_value.match(/(s\d+)/);if (!m) return $([]);return this.svg.find('text').filter('.'+m[1])},addStationsAndTitleHoverEvent : function(){var that = this;var getTargetCircle = function(elem) {return(elem[0].nodeName==='text')?that.getLinkedCirclesForTitle(elem.attr('class')): elem;};var getTargetTitle = function(elem) {return(elem[0].nodeName==='circle')?that.getLinkedTitlesForCircle(elem.attr('id')): that.getLinkedTitlesForCircle(elem.attr('class'))};this.svg.find('g.stations circle, text').not('.ghost').on('mouseover',function(){getTargetCircle($(this)).attr('r','7');getTargetTitle($(this)).addClass('s-hover')}).on('mouseout',function(){getTargetCircle($(this)).attr('r','5');getTargetTitle($(this)).removeClass('s-hover')})},getExtremePoints : function(ids) {var count = ids.length;var points = {x:[],y:[]};for (var i in ids) {var circle=$('circle#s'+ids[i]);if (!circle.length) {eReport('bad station point');continue;};points.x.push(parseInt(circle.attr('cx')));points.y.push(parseInt(circle.attr('cy')))};var sortN = function(a, b) { return a > b ? 1 : -1; };var set=['x','y'];var result = {};for (var i in set) {var coord = set[i];points[coord].sort(sortN);result['c'+coord+'Min']=points[coord][0];result['c'+coord+'Max']=points[coord][count-1];result['c'+coord+'Mid']=(points[coord][0]+points[coord][count-1])/2;};return result;},clearRouteMask : function(){this.svg.removeClass('matte');this.svg.find('.apart').removeClass('apart')},addRouteMask : function(set){this.clearRouteMask();this.svg.find('.apart').removeClass('matte');for(var i in set)this.svg.find(set[i]).addClass('apart');this.svg.addClass('matte')},marker_blink_timeouts : {from:null,to:null},getMarkerByDirect : function(direct){return this.svg.find('g.manual-marker').filter('.marker-'+direct).find('circle')},removeAllStationMarkers : function(){this.svg.find('g.manual-marker circle').hide();clearInterval(this.marker_blink_timeouts.from);clearInterval(this.marker_blink_timeouts.to)},removeStationMarker : function(direct){this.getMarkerByDirect(direct).hide();clearInterval(this.marker_blink_timeouts[direct])},addStationMarker : function(id,direct) {var data = this.getStationDataById(id);var target = this.getMarkerByDirect(direct);var ln = MetroDataHandler.stations_data[data.id].ln;target.attr('cx',data.x).attr('cy',data.y).removeAttr('class').addClass('ln'+ln).show();clearInterval(this.marker_blink_timeouts[direct]);var animate = function(){target.animate({'strokeWidth':6,'r':14},500,'linear',function(){target.animate({'strokeWidth':2,'r':6},300,'linear')})};animate();this.marker_blink_timeouts[direct] = setInterval(animate,1500)}};MetroPopupHandler = {init : function(){var handler = MetroTransformHandler;handler.elems.svg_wrapper.prepend('<div id="mPopap">'+'<i class="cross"></i>'+'<div class="content"></div>'+ '<i class="triangle bef"></i><i class="triangle aft"></i></div>');this.popup=$('#mPopap');var that = this;$(window).on('TransformMetroScheme ResizeMetroScheme',function(){that.popup.hide()});this.popup.find('.cross').on('click',function(){that.closePopup()});handler.elems.svg_block.on('click',function(){that.closePopup()});this.popup.on('click','.js-metro-popup-direct-button',function(){var t = $(this);var id=parseInt(t.attr('data-id'));var direct=t.attr('data-direct');MetroController.selectStation({autofill : true,direct : direct,autocalc: true,id : id,open_scheme : false,center_scheme : false,show_popup : false});that.closePopup()})},closePopup : function(){this.popup.hide();MetroDataHandler.abortRoutesLoading();this.last_popup_data = null;},last_popup_data : null,correctLastPopup : function(){if (!this.last_popup_data) return;this.addPopup(this.last_popup_data,true)},addPopup : function(data, skip_create_content_flag){this.last_popup_data = data;var handler = MetroTransformHandler;if (!skip_create_content_flag) this.createPopupContent(data);var width = Math.max(350, Math.min(250, handler.sizes.svg_wrapper_width*0.5));this.popup.css('width',width+'px').show();data.popup = {width : this.popup.width(),height : this.popup.height()};this.popup.hide();var popup_coord = handler.transformForPopup(data);this.popup.css({'left' : popup_coord.left+'px','top' : popup_coord.top+'px'});this.popup.find('.triangle.aft').css('left',popup_coord.triangle_left.aft);this.popup.find('.triangle.bef').css('left',popup_coord.triangle_left.bef);this.popup.show()},createPopupContent : function(data) {var content='';var handler = MetroDataHandler;switch(data.type) {case 'rzd':var info = handler.rzd_info[data.id-1];if(typeof info[1]!=='object')info=[info];for (var i in info) {var item = {name : info[i][0],url : info[i][1],alias : info[i][2],plat_id : info[i][3]};if(typeof item.alias !=='object')item.alias=[item.alias];if (!item.name) item.name = handler.icons_data[data.type][data.id-1];item.name=(item.name.indexOf('вокзал')===-1)?'ст.«'+item.name+'»' : item.name;content += '<div class="t-head h-4 t-icon-sign rail">'+ item.name +'</div>';var tmp = [];if (item.url) tmp.push('<a class="red" href="/rail/' +item.url+'/raspisanie.html">Расписание электричек</a>');for (var j in item.alias) {var schema_name='Схема&nbsp;'+handler.rzd_names[item.alias[j]]+'кого&nbsp;направления';var schema_href='/schema.php?alias=msk_'+item.alias[j]+'#'+item.plat_id;tmp.push('<a href="'+ schema_href +'">'+schema_name+'</a>')};content+='<p>'+tmp.join('<br>')+'</p>';};content = '<div class="t-text-simple">' + content+ '</div>';break;case 'air':var info = handler.icons_data[data.type][data.id-1];content = '<p class="t-text-simple">' + info + '</p>';break;default:var st = MetroDataHandler.stations_data[data.id];var ln = MetroDataHandler.lines_data[st.ln];var routes_layer_id='route-4st-'+data.id;var def = new $.Deferred();var that = this;def.done(function(resp){that.appendRoutes2Popup(resp, routes_layer_id)});var callAfterContentCreate = function(){handler.getRoutesForStation(data.id,def)};content ='<div class="t-head h-4 t-icon-sign metro ln-' + st.ln + '">'+ st.name +'</div>'+'<p class="line-name t-icon-metroln ln-' +st.ln+ '">' + ln.name + '</p>'+'<p class="main-link"><a href="' +st.href + '">Подробно о станции</a></p>'+'<div id="' + routes_layer_id+ '"></div>';if (st.disabled) {content+= '<p class="station-disabled">Станция закрыта</p>' ;} else {var input_state = MetroController.getStationsFromInputs();var addCheckClass = function(direct){if(data.id===input_state[direct])return ' s-station-and-direct-in-form';if(input_state[direct])return ' s-direct-in-form';return '';};content+='<p class="button-prefix">Построить маршрут:</p>' +'<div class="t-control-wrapper">' +'<button data-direct="from" data-id="' +data.id+ '" ' +'class="t-single-button js-metro-popup-direct-button' +addCheckClass('from') +' ">отсюда</button>' +'<button data-direct="to" data-id="' +data.id+ '" ' +'class="t-single-button js-metro-popup-direct-button' +addCheckClass('to') + '">сюда</button></div>'}};this.popup.find('.content').html(content);callAfterContentCreate && callAfterContentCreate()},appendRoutes2Popup : function(resp,routes_layer_id){if(typeof(resp)==='string'){resp = JSON.parse(decodeURI(resp))};var content='';var limit_by_type = 3;var total_count = 0;var visible_total_count =0;for (var title_type in resp) {content+='<p><span>'+title_type+':&nbsp;</span>';var row = resp[title_type];var count_by_type = row.length;total_count+= count_by_type;visible_total_count+= Math.min(count_by_type,limit_by_type);for (var i=0; i < count_by_type ; i++) {var str=i>0?', ' : '';str += '<a href="' +row[i][1]+ '">' + row[i][0] + '</a>';if (i >= limit_by_type) str = '<span class="s-hidden-route">' +str + '</span>';content+= str;};content+='</p>';};if (total_count > visible_total_count)content+= '<span onclick="MetroPopupHandler.showAllRoutes(this,\''+routes_layer_id+'\')" ' +'class="t-single-button routes_button">'+'показать все маршруты ('+total_count+')</span>';var layer=$('#'+routes_layer_id);layer.html(content);this.correctLastPopup()},showAllRoutes : function(elem,routes_layer_id) {$('#'+routes_layer_id).find('.s-hidden-route').removeClass('s-hidden-route');$(elem).remove();this.correctLastPopup()}};MetroDataHandler = {stations_data : {},lines_data : {},icons_data : {rzd : ['Савёловский вокзал','Белорусский вокзал','Петровско-Разумовская','Тимирязевская','Дмитровская','Беговая','Фили','Кунцево','Курский вокзал','Серп и Молот','Новогиреево','Электрозаводская','Новая','Выхино','Текстильщики','Царицыно','Павелецкий вокзал','Казанский, Ленинградский, Ярославский вокзалы','Рижский вокзал, пл.Ржевская','Ленинградская','Тушино','Киевский вокзал','ЗИЛ','Нижние Котлы','Коломенское','Окружная','НАТИ','Северянин','Фрезер','Карачарово','Калитники','Тестовская','Покровско-Стрешнево'],air : ['Аэроэкспресс до&nbsp;Шереметьево','Аэроэкспресс в&nbsp;Домодедово','Аэроэкспресс до&nbsp;Внуково','От&nbsp;Юго-Западной до&nbsp;Внуково автобус&nbsp;№ 611','От&nbsp;Планерной до Шереметьево Автобус&nbsp;№817','от&nbsp;ст.метро "Речной вокзал" до&nbsp;Шереметьево: Автобус&nbsp;№ 851','от&nbsp;Домодедовской до&nbsp;Домодедово автобус&nbsp;№ 308','от&nbsp;м.Котельники до а/п&nbsp;Жуковский автобус&nbsp;441','От&nbsp;Ховрино до Шереметьево Автобус&nbsp;№ 1195','От&nbsp;Лобни до Шереметьево Автобус&nbsp;№ 21','От&nbsp;Тропарёво до&nbsp;Внуково автобус&nbsp;№ 611','От&nbsp;Румянцево до&nbsp;Внуково автобус&nbsp;№ 611','От&nbsp;Саларьево до&nbsp;Внуково автобус&nbsp;№ 911','От&nbsp;Рассказовки до&nbsp;Внуково автобусsы&nbsp;№ 32,128','Аэроэкспресс в&nbsp;Домодедово','Аэроэкспресс до&nbsp;Шереметьево']},rzd_names : {'len' : "Ленинградс",'riz' : "Рижс",'gor' : "Горьковс",'kiv' : "Киевс",'pav' : "Павелец",'sav' : "Савёловс",'bel' : "Белорусс",'kaz' : "Казанс",'kur' : "Курс",'yar' : "Ярославс"},rzd_info : [[['','savelovsky-vokzal','sav',904],['Савёловская','savelovskaya',['kur','bel'],825]],['','belorussky-vokzal','bel',905],['','petrovsko-razumovskoye','len',844],['','timiryazevskaya','sav',839],['','dmitrovskaya','riz',827],['','begovaya','bel',818],['','fili','bel',808],['','kuntsevo','bel',797],['','kursky-vokzal','gor',908],['','serp-i-molot','gor',810],['','novogireevo','gor',816],['','yelektrozavodskaya','kaz',823],['','novaya','kaz',812],['','vykhino','kaz',792],['','tekstilshchiki','kur',790],['','tsaritsyno','kur',771],['','pavelecky-vokzal','pav',907],[['Казанский вокзал','kazansky-vokzal','kaz',902],['Ленинградский вокзал','leningradsky-vokzal','len',900],['Ярославский вокзал','yaroslavsky-vokzal','yar',901],['Москва-Каланчёвская','moskva-kalanchevskaya',['bel','kur','riz'],820]],[['Рижский вокзал','rijsky-vokzal','riz',903],['Ржевская','rjevskaya',['kur','bel'],831]],['','leningradskaya','riz',835],['','tushino','riz',833],['','kievsky-vokzal','kiv',906],['','zil','pav',785],['','nijniye-kotly','pav',778],['','kolomenskoye','pav',775],['','okrujnaya','sav',851],['','','len',0],['','severyanin','yar',847],['','frezer','kaz',814],['','karacharovo','gor',803],['','kalitniki','kur',801],['','testovskaya','bel',809],['','pokrovskoye-streshnevo','riz',834]],routes_cache : {},last_routes_xhr : null,getRoutesForStation : function(station_id, def) {if (this.last_routes_xhr) this.last_routes_xhr.abort();var resp_from_cache = this.routes_cache[station_id];if (resp_from_cache) {def.resolve(resp_from_cache);return;};var xhr = $.ajax({cache:true,url: '/services/single-transport-in-point',data:{type:"metro",id:station_id},dataType: 'json'});var that = this;xhr.done(function(resp){that.routes_cache[station_id] = resp;def.resolve(resp)});this.last_routes_xhr = xhr;},abortRoutesLoading : function(){var xhr = this.last_routes_xhr;if (!xhr) return;if(xhr.state()!=='pending')return;xhr.abort()},ground_cache : {},last_ground__xhr : null,getGroundRoutes : function(id1,id2){if (this.last_ground_xhr) this.last_ground_xhr.abort();var cache_key=id1+':'+id2;var resp_from_cache = this.ground_cache[cache_key];if (resp_from_cache) {var def = new $.Deferred();def.resolve(resp_from_cache);return def;};var xhr = $.ajax({cache:true,url: '/services/single-transport-m2m',data: {id1:id1,id2:id2} ,dataType: 'json'});var that = this;xhr.done(function(resp){that.ground_cache[cache_key] = resp;});this.last_ground_xhr = xhr;return xhr;},renderGroundResult: function(resp){if(!resp)return '';var content='';for (var routename in resp) {content+= ( content ? '; ' : '') + '<span class="groupname">' + routename + '&nbsp;</span>';var group = [];var set = resp[routename];var len = set.length;var prev_cnt = 0;for (var i=0; i < len ; i++) {var cnt = parseInt(set[i][0]);var name = set[i][1];var href = set[i][2];group.push('<a class="name" href="'+ href + '">'+ name+'</a>'+ ( i && prev_cnt !== cnt || i===len-1? '<span class="stop-count">&nbsp;- ' +cnt+'&nbsp;останов'+MainLib.word_ok(cnt,'ка','ки','ок')+'</span>': ''));prev_cnt = cnt;};content+=group.join(', ')+'';};return '<p class="t-text-simple">Наземным транспортом: ' + content + '</p>';},result_cache : {},last_result_xhr : null,getCalculateRresult : function(id1,id2){if (this.last_result_xhr) this.last_result_xhr.abort();var cache_key=id1+':'+id2;var resp_from_cache = this.result_cache[cache_key];if (resp_from_cache) {var def = new $.Deferred();def.resolve(resp_from_cache);return def;};var xhr = $.ajax({cache: true,url: '/services/single-metro-p2p',data : {st1:id1 ,st2:id2 },dataType: 'json'});var that = this;xhr.done(function(resp){that.result_cache[cache_key] = resp;});this.last_result_xhr = xhr;return xhr;},prepareCalcResult : function(resp) {var result = [];for (var n in resp) {result[n] = {time : resp[n][0],hub : resp[n][1],route : []};for (var i in resp[n][2]) result[n].route.push({id : resp[n][2][i][0],time : resp[n][2][i][1],hub : resp[n][2][i][2]})};return result;},parseCalcResult :function(data) {var wrapStName = function(name, id, pretext) {if (pretext) {var m = /^([а-яё]+)([а-яё]([а-яё]))$/i.exec(name);switch (true) {case m && m[2]==='ая' : name=m[1]+(pretext==='на'?'ую' : 'ой');break;case m && m[2]==='ка' : name=m[1]+(pretext==='на'?'ку' : 'ки');break;case m && m[3] === 'о' : break;default: name='ст.«'+name+'»';}};return '<span class="station">' + name + '</span>';};var route_length = data.route.length, h_icon = '<i class="hub-icon"></i>';var ids = [],result = {header : '',list : '',text : '',scheme_elems : [],main : ''},time = 0,list_similar_counter = 0,prev = null,next = null;result.main='≈ <b>'+data.time+'</b> минут'+MainLib.word_ok(data.time,'a','ы','')+', '+ ( data.hub?'<b>'+data.hub+'</b> пересад'+MainLib.word_ok(data.hub,'ка','ки','ок'): ' без пересадок');for (var i=0; i < route_length ; i++){var r = data.route[i],id = r.id,st = next || this.stations_data[id],ln = this.lines_data[st.ln],skip_flag = 0;if (i + 1 < route_length) {next = this.stations_data[data.route[i + 1].id];next.id = data.route[i + 1].id;};if (i === 0) {result.text='От&nbsp;'+wrapStName(st.name,id,'от');result.start='circle#'+st.id1+'_'+id;} else if (r.hub) {var ttime=r.time+'&nbsp;мин.';if (r.time > 4) ttime = '<span style="color:red">' + ttime + '</span>';ttime=' ('+ttime+')';if (i + 1 < route_length && r.id === 70 && prev.id === 70) {result.text+=' до&nbsp;'+wrapStName('Киевской',70,'')+' ('+time+'&nbsp;мин.); пересадка на поезд до&nbsp;'+(next && next.id===69?'Международной' : 'Кунцевской')+'(1&nbsp;мин.)';skip_flag = 1;} else if (i + 1 < route_length && r.id === 237 && prev.id === 237) {result.text+=' до&nbsp;'+wrapStName('Хорошёвской',237,'')+' ('+time+'&nbsp;мин.); пересадка на поезд до&nbsp;'+(next && next.id===331?'ст.Народного Ополчения' : 'Шелепихи')+'(1&nbsp;мин.)';skip_flag = 1;} else if (st.id1 === prev.id1) {result.text+=' переход на '+ln.name_on+ttime;} else {result.text+=' переход на '+wrapStName(st.name,id,'на')+(i+1 < route_length || st.ass?' '+ln.name_r : '')+ ttime;};if(i+1 < route_length)result.text+=', ';time=0;} else if ( i+1 < route_length && st.ln === next.ln) {time+= r.time;} else if ( i+1 <= route_length) {result.text+=' до '+wrapStName(st.name,id,'до')+' ('+(time+r.time)+'&nbsp;мин.)';if (i+2 <= route_length) {time = 0;result.text+=', ';}};if (i===0 || i===route_length-1) {result.header+=(i?'&nbsp;&#8212; ' : '')+st.name+(st.ass?' ('+ln.name+')' : '');next = null;};result.list+=(r.hub?'<p>'+ h_icon+(r.time>4?h_icon : '')+(r.time>8?h_icon : '')+(r.time>12?h_icon : '')+'</p>' : '');var st_color = st.ln;if (next && prev&& (next.ln === prev.ln && id!==70 && id!==237 )) {list_similar_counter++;} else {if (list_similar_counter) {for (var j=0;j<list_similar_counter;j++) {var short_class=j>0?' short'+(j>2?'' : j): '';result.list+= '<span class="t-icon-metroln ln-' + st_color + short_class + '"></span>';};result.list+= '&nbsp;&nbsp;<span class="gray">' + list_similar_counter + '&nbsp;'+'станци'+MainLib.word_ok(list_similar_counter,'я','и','й')+'</span></p>';list_similar_counter = 0;};result.list+= '<p><span class="t-icon-metroln ln-' + st_color + '"></span>&nbsp;&nbsp;' + st.name +'</p>';};if (!skip_flag) {result.scheme_elems.push('circle#s'+id,'text.s'+id);if(st.alt.length)for(var j in st.alt)result.scheme_elems.push('text.s'+st.alt[j]);if(i>0)result.scheme_elems.push('g.lines .s'+prev.id+'.s'+id);if(r.hub && i>0)result.scheme_elems.push('.p2p2 .p'+id+'.p'+prev.id)};ids.push(id);prev = st;prev.id = id;};result.extreme_points = MetroSchemeHandler.getExtremePoints(ids);return result;}};(function(){var metro4sort = [];var metro4alt = {};var class_station='js-metrostation';$('#metrodata .js-metro-line').each(function(){var t = $(this);var ln=t.attr('data-line');var item = {name : t.html() ,href : t.attr('href')};item.name_on=item.name.replace(/ая линия$/,'ую линию');item.name_r=item.name.replace(/ая линия$/,'ой линии');if(ln==='14')item.name_on=item.name_r='МЦК';else if(ln==='11')item.name_on=item.name_r='БКЛ';MetroDataHandler.lines_data[ln] = item;});$('#metrodata .js-metro-stations').each(function(){var ln=$(this).attr('data-line');$(this).find('a').each(function(){var t = $(this);var m=t.attr('data-metrost').split(',');var item = {id : parseInt(m[0]),id1 : parseInt(m[1]),ass : parseInt(m[2]),ordr : parseInt(m[3]),sort : parseInt(m[4]),name : t.find('.name').html(),disabled: parseInt(m[5])};if (Math.abs(item.ass)===1) {metro4alt[item.id1] = metro4alt[item.id1] || [];metro4alt[item.id1].push(item.id)};metro4sort[item.sort] = {name: item.name,ln: ln,char : item.name.substr(0,1),id: item.id};MetroDataHandler.stations_data[item.id] = {name: item.name,href : t.attr('href'),ln: ln,ass: item.ass,id1: item.id1,alt : [],disabled: item.disabled};t.attr('data-id',item.id).addClass(class_station).removeAttr('href')})});for (var id1 in metro4alt)for (var id in metro4alt[id1])MetroDataHandler.stations_data[metro4alt[id1][id]].alt = metro4alt[id1];var k = -1, data = [] , lastchar =null;for (var i=0; i<metro4sort.length; i++) {if(typeof metro4sort[i]==='undefined')continue;if (!lastchar || lastchar!== metro4sort[i].char) {lastchar = metro4sort[i].char;k++;data[k] = {st: [],char: metro4sort[i].char};};data[k].st.push({name: metro4sort[i].name,ln: metro4sort[i].ln,id : metro4sort[i].id})};var content_control='';var content_layers='';var names = DependHandler.names;for (var k=0; k<data.length; k++) {var control_class=names.control+' ' +(k?'' : ' '+names.active_control);var depend_class=names.layer+(k?'' : ' '+names.active);var layer_key='letter-'+k;var rows = Math.ceil(data[k].st.length/3);var depend_style='grid-template-rows: repeat('+rows+',36px);';content_control +='<div class="alpha-title '+ control_class + '" data-depend="{\'hide\':\'^letter-\',\'toggle-slide\':\'' + layer_key+ '\'}">'+'<span class="">' +data[k].char+ '</a></div>';content_layers+= '<div class="'+depend_class+'" data-depend-set="' + layer_key + '">'+'<div class="t-metrostation-list-table list_table_metro_alpha" style="' + depend_style + '">';for (var i=0; i< data[k].st.length; i++) {var item = data[k].st[i];content_layers+='<p>'+'<a class="name '+ class_station +' t-icon-metroln ln-' +item.ln + '" data-id="' + item.id + '">' + item.name + '</a>'+'</p>'};content_layers+='</div></div>';}$('#metrosort').html('<div class="t-alpha-list alpha_list_metrost">' + content_control + '</div>'+ content_layers);DependHandler.init();$('.'+class_station).on('click',function(event){event.preventDefault();var id=$(this).attr('data-id');MetroController.selectStation({autofill : false,autocalc: false,id : parseInt(id),open_scheme : true,center_scheme : true,show_popup : true})})})();$(function(){MetroTransformHandler.init();MetroSchemeHandler.init();MetroPopupHandler.init();MetroController.init();window.ad_hack = { counter: 10 };window.ad_hack.timeout = setInterval(function(){$('.b-global-wrapper').removeAttr('style');window.ad_hack.counter--;if (window.ad_hack.counter<0) clearInterval(window.ad_hack.timeout)},1000)});MetroController = {init : function(mode){this.mode=mode || 'desktop';this.sections=$('.js-metro-section');this.section_tabs=$('.b-metro-pagemenu a');this.form = $('form[data-form-id="mainsearch-p2p"]');this.wrapper4result=$('.t-metro-calc-result');this.wrapper4result.after('<div class="t-metro-ground-result"></div>');this.wrapper4ground=$('.t-metro-ground-result');this.section_depend_buttons=$('.js-section-depend-button');if(this.mode==='mobile'){this.layer4main_result=$('.b-metro-calc-results-info');this.m_control_panel=$('.b-metro-control-panel')};this.sections.each(function(){var t = $(this);if(t.attr('data-section')==='result'){t.append('<span onclick="history.back();" class="section-close-button"></span>')} else {t.append('<a href="#" class="section-close-button"></a>')}});this.hashControl();this.hashControlStart();this.addEvents()},getDataForInputEvent : function(event){var str=event.target.attributes['data-object'].nodeValue;var name=event.target.attributes['data-input-name'].nodeValue;var direct;if(name==='p2p-metro-a')direct='from';else if(name==='p2p-metro-b')direct='to';else return null;var data = str ? MainLib.str2json(str) : {};data.direct = direct;return data;},addEvents : function(){var that = this;$(window).on('ResizeMetroScheme',function(){that.sections.css('height',MetroTransformHandler.sizes.svg_wrapper_height+'px')});$('.js-autocomplete input').on('SelectStation',function(event){var data = that.getDataForInputEvent(event);if (!data) return;that.checkNearFiledWhenStationAddedToForm(data.direct,data.id);MetroSchemeHandler.addStationMarker(data.id, data.direct);setTimeout(function(){that.selectStation({autofill : false,direct : data.direct,autocalc: true,id : data.id,open_scheme : true,center_scheme : true,show_popup : true})},200)});var trigger = FormsHandler.Form.prototype.names.input_clear_trigger;$('.js-autocomplete input').on(trigger,function(event){var data = that.getDataForInputEvent(event);if (!data) return;MetroSchemeHandler.removeStationMarker(data.direct)});this.section_depend_buttons.on('click',function(){var t= $(this);var section=t.attr('data-parent-section');var is_active=t.hasClass('s-button-active');if(is_active && section==='result'){history.back()} else {that.showPageSection(is_active?'scheme' : section);return false;}});if(this.mode==='mobile'){var button=$('.js-fullscreen-button');var handler = MetroTransformHandler;if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {button.remove()} else {button.on('click',function(){var flag_off = handler.checkFullScreenOff();handler.toggleFullScreen(flag_off);$(this).toggleClass('s-button-active',flag_off)})}}},checkStationDisable : function(id){var st = MetroDataHandler.stations_data[id];if (!st.disabled) return false;var msg='Невозможно выполнить расчет: станция '+st.name+' закрыта';ModalHandler.alert(msg);return true;},doCalculateRoute :function(id1, id2) {if (this.checkStationDisable(id1) || this.checkStationDisable(id2)) return;this.showPageSection('scheme');MetroPopupHandler.closePopup();var xhr = MetroDataHandler.getCalculateRresult(id1,id2);ModalHandler.loader(xhr,'Идет вычисление маршрута');var xhr_ground = MetroDataHandler.getGroundRoutes(id1,id2);var that = this;xhr_ground.done(function(resp) {var content = MetroDataHandler.renderGroundResult(resp);that.wrapper4ground.html(content)});xhr.done(function(resp){ModalHandler.close();that.hashControlStart('m'+id1+'m'+id2);that.last_calc_result = {data : MetroDataHandler.prepareCalcResult(resp),result :[]};if(that.mode==='desktop')that.showCalcResultByVariant(1);else that.showCalcResult4Mobile()}).fail(function(xhr,type){if(type==='abort'){that.hashControlStart('')} else {ModalHandler.close();ModalHandler.alert('Попробуйте повторить позже','Ошибка расчета')}})},renderCalcResultContent : function(result,variant,count_of_variants){var other_variant_button='';if (count_of_variants>1) {var num = variant===1 ? 2 : 1;var name='Вариант '+num;other_variant_button ='<p>'+'<button onclick="MetroController.showCalcResultByVariant('+num+')" ' +'class="t-single-button variant ">' +name+ '</button>'+'</p>';};return '<h3 class="result-header">' + result.header + '</h3>'+'<p class="result-info">' + result.main + '</p>'+'<div class="t-control-wrapper">' +other_variant_button +'<button onclick="MetroController.clearCalcResult()" ' +'class="t-single-button button_light">Начать заново</button>'+'</div>'+'<p class="result-text">' + result.text + '</p>'+'<div class="result-list">' + result.list + '</div>';},mobile_variant_class : 'js-metro-p2p-variant',showCalcResult4Mobile : function() {var titles =[];for (var i in this.last_calc_result.data) {var result = this.last_calc_result.result[i];if (!result) {var data = this.last_calc_result.data[i];result = MetroDataHandler.parseCalcResult(data);this.last_calc_result.result[i] = result;};titles.push(result.main.replace('≈ ',''))};var content='';var many_variant_flag = (titles.length>1);for (var i in titles) {var variant = parseInt(i) + 1;var letter=variant===1?'A' : 'B';content+='<div class="' + this.mobile_variant_class + ' variant-button ' +(many_variant_flag ? '' : ' s-active') + '"' +(many_variant_flag ? ' data-variant="' + variant + '"' : '') +'>'+(many_variant_flag ? '<span class="prefix">Вариант </span>' + letter + ': ' : '') +titles[i]+'</div>';};this.layer4main_result.attr('data-variant-count',titles.length);this.layer4main_result.find('.result-wrapper').html(content);var that = this;$('.'+this.mobile_variant_class+'[data-variant]').on('click',function(){var variant=parseInt($(this).attr('data-variant'));that.showCalcResultByVariant4Mobile(variant)});this.showCalcResultByVariant4Mobile(1);if(this.mode==='mobile')MetroSchemeHandler.removeAllStationMarkers();this.showPageSection('scheme')},showCalcResultByVariant4Mobile : function(variant) {var index = variant-1;var result = this.last_calc_result.result[index];var content = this.renderCalcResultContent(result, variant, this.last_calc_result.data.length);this.wrapper4result.html(content);this.layer4main_result.addClass('s-panel-active');this.m_control_panel.removeClass('s-panel-active');$('.'+this.mobile_variant_class+'[data-variant]').removeClass('s-active');$('.' + this.mobile_variant_class + '[data-variant="' + variant+'"]').addClass('s-active');MetroTransformHandler.calcSizes();MetroTransformHandler.centerSchemeResult(result.extreme_points);MetroSchemeHandler.addRouteMask(result.scheme_elems)},showCalcResultByVariant : function(variant) {var index = variant-1;var result = this.last_calc_result.result[index];if (!result) {var data = this.last_calc_result.data[index];result = MetroDataHandler.parseCalcResult(data);this.last_calc_result.result[index] = result;};var content = this.renderCalcResultContent(result, variant, this.last_calc_result.data.length);this.wrapper4result.html(content);this.showPageSection('scheme');MetroTransformHandler.centerSchemeResult(result.extreme_points);MetroSchemeHandler.addRouteMask(result.scheme_elems)},clearCalcResult4Mobile: function(){this.layer4main_result.removeClass('s-panel-active');this.m_control_panel.addClass('s-panel-active');this.clearCalcResult()},clearCalcResult : function(){this.clearInput('from');this.clearInput('to');this.hashControlStart('');this.wrapper4result.html('');this.wrapper4ground.html('');this.showPageSection('scheme');MetroTransformHandler.resetTransform('begin');MetroSchemeHandler.clearRouteMask();MetroSchemeHandler.removeAllStationMarkers()},getStationsFromInputs : function(){var result = {from : 0, to: 0};var form_object = FormsHandler.getFormObjectForInnerElement(this.form);var inputs = form_object.data.input;var a=inputs['p2p-metro-a'];var b=inputs['p2p-metro-b'];if(typeof a==='object')result.from=parseInt(a.id);if(typeof b==='object')result.to=parseInt(b.id);return result;},clearInput : function(direct) {this.addStationDataToInput(direct,0);MetroSchemeHandler.removeStationMarker(direct)},showMainForm : function(){MainSearchDisplayHandler.hide();MainSearchKitsHandler.collection['main'].setActive('p2p');$('.' + DropdownHandler.names.layer + '[data-dropdown-id="p2p-type"]').find('li[data-dropdown-value="p2p-metro"]').click()},addStationDataToInput : function(direct, id) {if(this.mode==='desktop')this.showMainForm();var name=direct==='from'?'p2p-metro-a' : 'p2p-metro-b';var input = this.form.find('input[data-input-name="'+name+'"]');var attr_name = AutocompleteHandler.names.attr_data;if (id) {var station = MetroDataHandler.stations_data[id];var item_data = {id : id,name : station.name,type : 'metro',url : station.href};input.val(station.name);input.attr(attr_name, MainLib.json2str(item_data))} else {input.val('');input.removeAttr(attr_name)};input.change()},checkNearFiledWhenStationAddedToForm : function(direct, id){var form_state = this.getStationsFromInputs();var other_direct=direct==='from'?'to' : 'from';if (form_state[other_direct]=== parseInt(id)) this.clearInput(other_direct)},addStationToForm :function(direct, id){this.checkNearFiledWhenStationAddedToForm(direct, id);this.addStationDataToInput(direct,id);MetroSchemeHandler.addStationMarker(id,direct)},selectStation : function(options) {var data = options.id? MetroSchemeHandler.getStationDataById(options.id): MetroSchemeHandler.getStationDataByElem(options.elem);var form_state = this.getStationsFromInputs();var direct = options.direct || null;if (!direct) {if(!form_state.from)direct='from';else if(!form_state.to)direct='to';};if (options.autofill && direct) {this.addStationToForm(direct, data.id);form_state = this.getStationsFromInputs()};if (options.autocalc && form_state.from && form_state.to && direct) {this.doCalculateRoute(form_state.from, form_state.to);return;};if(options.open_scheme)this.showPageSection('scheme');if (options.center_scheme) MetroTransformHandler.centerSchemePoint([data.x,data.y]);if (options.show_popup) setTimeout(function(){MetroPopupHandler.addPopup(data)},200);MetroSchemeHandler.clearRouteMask()},showPageSection : function(section) {if (this.current_main_section === section) return;this.sections.hide();this.section_tabs.removeClass('s-active');this.section_tabs.filter('.to-'+section).addClass('s-active');this.current_main_section = section;this.hashControlStart(section==='scheme'?'' : section);this.section_depend_buttons.removeClass('s-button-active');this.section_depend_buttons.filter('[data-parent-section="'+ section +'"]').addClass('s-button-active');if(section==='scheme')return;this.sections.filter('[data-section="'+section+'"]').show();MetroTransformHandler.calcSizes()},main_sections :['stations','lines','info','news'],current_main_section : 'scheme',hash_control_timer : null,current_hash : '',hashControl : function() {var hash=document.location.hash.replace('#','');if (hash===this.current_hash) return;this.current_hash = hash;var match = /^m(\d+)m(\d+)$/.exec(hash);if (match) {MetroSchemeHandler.removeAllStationMarkers();var id1 = parseInt(match[1]);var id2 = parseInt(match[2]);this.addStationDataToInput('from',id1);this.addStationDataToInput('to',id2);this.doCalculateRoute(id1, id2);return;};var match = /^(\d+)$/.exec(hash);if (match) {this.selectStation({autofill : false,autocalc: false,id : parseInt(match[1]),open_scheme : true,center_scheme : true,show_popup : true});return;};if (this.main_sections.indexOf(hash)!==-1) {this.showPageSection(hash);return;};if(hash==='')this.showPageSection('scheme');this.hashClear()},hashClear : function(){history.replaceState(null, null, document.location.pathname)},hashControlStart : function(start_hash) {if(typeof start_hash!=='undefined'){clearInterval(this.hash_control_timer);this.current_hash = start_hash;location.hash = start_hash;if(start_hash==='')this.hashClear()};var that = this;this.hash_control_timer = setInterval(function(){ that.hashControl()},300)}};